const e=JSON.parse('{"key":"v-026e8df1","path":"/code/java/high-availability/high-availability-system-design.html","title":"高可用系统设计指南","lang":"zh-CN","frontmatter":{"title":"高可用系统设计指南","category":"高可用","date":"2021-03-20T00:00:00.000Z","description":"一篇短小的文章，面试经常遇到的这个问题。本文主要包括下面这些内容： 高可用的定义 哪些情况可能会导致系统不可用？ 有哪些提高系统可用性的方法？只是简单的提一嘴，更具体内容在后续的文章中介绍，就拿限流来说，你需要搞懂：何为限流？如何限流？为什么要限流？如何做呢？说一下原理？。 什么是高可用？可用性的判断标准是啥？ 高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的。","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/code/java/high-availability/high-availability-system-design.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"高可用系统设计指南"}],["meta",{"property":"og:description","content":"一篇短小的文章，面试经常遇到的这个问题。本文主要包括下面这些内容： 高可用的定义 哪些情况可能会导致系统不可用？ 有哪些提高系统可用性的方法？只是简单的提一嘴，更具体内容在后续的文章中介绍，就拿限流来说，你需要搞懂：何为限流？如何限流？为什么要限流？如何做呢？说一下原理？。 什么是高可用？可用性的判断标准是啥？ 高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:published_time","content":"2021-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高可用系统设计指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"什么是高可用？可用性的判断标准是啥？","slug":"什么是高可用-可用性的判断标准是啥","link":"#什么是高可用-可用性的判断标准是啥","children":[]},{"level":2,"title":"哪些情况会导致系统不可用？","slug":"哪些情况会导致系统不可用","link":"#哪些情况会导致系统不可用","children":[]},{"level":2,"title":"有哪些提高系统可用性的方法？","slug":"有哪些提高系统可用性的方法","link":"#有哪些提高系统可用性的方法","children":[{"level":3,"title":"1. 注重代码质量，测试严格把关","slug":"_1-注重代码质量-测试严格把关","link":"#_1-注重代码质量-测试严格把关","children":[]},{"level":3,"title":"2.使用集群，减少单点故障","slug":"_2-使用集群-减少单点故障","link":"#_2-使用集群-减少单点故障","children":[]},{"level":3,"title":"3.限流","slug":"_3-限流","link":"#_3-限流","children":[]},{"level":3,"title":"4.超时和重试机制设置","slug":"_4-超时和重试机制设置","link":"#_4-超时和重试机制设置","children":[]},{"level":3,"title":"5.熔断机制","slug":"_5-熔断机制","link":"#_5-熔断机制","children":[]},{"level":3,"title":"6.异步调用","slug":"_6-异步调用","link":"#_6-异步调用","children":[]},{"level":3,"title":"7.使用缓存","slug":"_7-使用缓存","link":"#_7-使用缓存","children":[]},{"level":3,"title":"8.其他","slug":"_8-其他","link":"#_8-其他","children":[]}]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":6.13,"words":1838},"filePathRelative":"code/java/high-availability/high-availability-system-design.md","localizedDate":"2021年3月20日","excerpt":"<p>一篇短小的文章，面试经常遇到的这个问题。本文主要包括下面这些内容：</p>\\n<ol>\\n<li>高可用的定义</li>\\n<li>哪些情况可能会导致系统不可用？</li>\\n<li>有哪些提高系统可用性的方法？只是简单的提一嘴，更具体内容在后续的文章中介绍，就拿限流来说，你需要搞懂：何为限流？如何限流？为什么要限流？如何做呢？说一下原理？。</li>\\n</ol>\\n<h2> 什么是高可用？可用性的判断标准是啥？</h2>\\n<p><strong>高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的。</strong></p>","autoDesc":true}');export{e as data};
