const a=JSON.parse('{"key":"v-87a55d62","path":"/code/java/common/jvm/java-jvm-questions-01.html","title":"Java 内存区域","lang":"zh-CN","frontmatter":{"title":"Java 内存区域","category":"Java","date":"2020-09-21T00:00:00.000Z","tag":["JVM"],"description":"Java 内存区域 对于 Java 程序员来说，在虚拟机自动内存管理机制下，不再需要像 C/C++程序开发程序员这样为每一个 new 操作去写对应的 delete/free 操作，不容易出现内存泄漏和内存溢出问题。正是因为 Java 程序员把内存控制权利交给 Java 虚拟机，一旦出现内存泄漏和溢出方面的问题，如果不了解虚拟机是怎样使用内存的，那么排查错误将会是一个非常艰巨的任务。 Java 内存区域和内存模型(JMM)有何区别？ Java 内存区域和内存模型是完全不一样的两个东西！！！ Java 内存区域定义了JVM 在运行时如何分区存储程序数据，就比如说堆主要用于存放对象实例。 Java 内存模型抽象了线程和主内存之间的关系，就比如说线程之间的共享变量必须存储在主内存中，其目的是为了屏蔽系统和硬件的差异，避免一套代码在不同的平台下产生的效果不一致。","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/begun-blog/code/java/common/jvm/java-jvm-questions-01.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"Java 内存区域"}],["meta",{"property":"og:description","content":"Java 内存区域 对于 Java 程序员来说，在虚拟机自动内存管理机制下，不再需要像 C/C++程序开发程序员这样为每一个 new 操作去写对应的 delete/free 操作，不容易出现内存泄漏和内存溢出问题。正是因为 Java 程序员把内存控制权利交给 Java 虚拟机，一旦出现内存泄漏和溢出方面的问题，如果不了解虚拟机是怎样使用内存的，那么排查错误将会是一个非常艰巨的任务。 Java 内存区域和内存模型(JMM)有何区别？ Java 内存区域和内存模型是完全不一样的两个东西！！！ Java 内存区域定义了JVM 在运行时如何分区存储程序数据，就比如说堆主要用于存放对象实例。 Java 内存模型抽象了线程和主内存之间的关系，就比如说线程之间的共享变量必须存储在主内存中，其目的是为了屏蔽系统和硬件的差异，避免一套代码在不同的平台下产生的效果不一致。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2020-09-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 内存区域\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"Java 内存区域","slug":"java-内存区域","link":"#java-内存区域","children":[{"level":3,"title":"Java 内存区域和内存模型(JMM)有何区别？","slug":"java-内存区域和内存模型-jmm-有何区别","link":"#java-内存区域和内存模型-jmm-有何区别","children":[]},{"level":3,"title":"简单介绍一下 Java 内存区域（运行时数据区）","slug":"简单介绍一下-java-内存区域-运行时数据区","link":"#简单介绍一下-java-内存区域-运行时数据区","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"code/java/common/jvm/java-jvm-questions-01.md","localizedDate":"2020年9月21日","excerpt":"<h2> Java 内存区域</h2>\\n<p>对于 Java 程序员来说，在虚拟机自动内存管理机制下，不再需要像 C/C++程序开发程序员这样为每一个 new 操作去写对应的 delete/free 操作，不容易出现内存泄漏和内存溢出问题。正是因为 Java 程序员把内存控制权利交给 Java 虚拟机，一旦出现内存泄漏和溢出方面的问题，如果不了解虚拟机是怎样使用内存的，那么排查错误将会是一个非常艰巨的任务。</p>\\n<h3> Java 内存区域和内存模型(JMM)有何区别？</h3>\\n<p><strong>Java 内存区域和内存模型是完全不一样的两个东西！！！</strong></p>\\n<ul>\\n<li>Java 内存区域定义了JVM 在运行时如何分区存储程序数据，就比如说堆主要用于存放对象实例。</li>\\n<li>Java 内存模型抽象了线程和主内存之间的关系，就比如说线程之间的共享变量必须存储在主内存中，其目的是为了屏蔽系统和硬件的差异，避免一套代码在不同的平台下产生的效果不一致。</li>\\n</ul>","autoDesc":true}');export{a as data};
