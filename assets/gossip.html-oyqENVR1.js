const e=JSON.parse('{"key":"v-2d0c2e50","path":"/code/java/distributed-system/theorem_algorithm_protocol/gossip.html","title":"Gossip 协议介绍","lang":"zh-CN","frontmatter":{"title":"Gossip 协议介绍","icon":"分布式","date":"2020-11-30T00:00:00.000Z","description":"背景 在分布式系统中，不同的节点进行数据/信息共享是一个基本的需求。 一种比较简单粗暴的方法就是 集中式发散消息，简单来说就是一个主节点同时共享最新信息给其他所有节点，比较适合中心化系统。这种方法的缺陷也很明显，节点多的时候不光同步消息的效率低，还太依赖与中心节点，存在单点风险问题。 于是，分散式发散消息 的 Gossip 协议 就诞生了。 Gossip 协议介绍 Gossip 直译过来就是闲话、流言蜚语的意思。流言蜚语有什么特点呢？容易被传播且传播速度还快，你传我我传他，然后大家都知道了。","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/begun-blog/code/java/distributed-system/theorem_algorithm_protocol/gossip.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"Gossip 协议介绍"}],["meta",{"property":"og:description","content":"背景 在分布式系统中，不同的节点进行数据/信息共享是一个基本的需求。 一种比较简单粗暴的方法就是 集中式发散消息，简单来说就是一个主节点同时共享最新信息给其他所有节点，比较适合中心化系统。这种方法的缺陷也很明显，节点多的时候不光同步消息的效率低，还太依赖与中心节点，存在单点风险问题。 于是，分散式发散消息 的 Gossip 协议 就诞生了。 Gossip 协议介绍 Gossip 直译过来就是闲话、流言蜚语的意思。流言蜚语有什么特点呢？容易被传播且传播速度还快，你传我我传他，然后大家都知道了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://began-zhao.github.io/begun-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Gossip 协议介绍"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:published_time","content":"2020-11-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gossip 协议介绍\\",\\"image\\":[\\"https://began-zhao.github.io/begun-blog/\\"],\\"datePublished\\":\\"2020-11-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"Gossip 协议介绍","slug":"gossip-协议介绍","link":"#gossip-协议介绍","children":[]},{"level":2,"title":"Gossip 协议应用","slug":"gossip-协议应用","link":"#gossip-协议应用","children":[]},{"level":2,"title":"Gossip 协议消息传播模式","slug":"gossip-协议消息传播模式","link":"#gossip-协议消息传播模式","children":[{"level":3,"title":"反熵(Anti-entropy)","slug":"反熵-anti-entropy","link":"#反熵-anti-entropy","children":[]},{"level":3,"title":"谣言传播(Rumor mongering)","slug":"谣言传播-rumor-mongering","link":"#谣言传播-rumor-mongering","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"Gossip 协议优势和缺陷","slug":"gossip-协议优势和缺陷","link":"#gossip-协议优势和缺陷","children":[]},{"level":2,"title":"总结","slug":"总结-1","link":"#总结-1","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":7.16,"words":2148},"filePathRelative":"code/java/distributed-system/theorem&algorithm&protocol/gossip.md","localizedDate":"2020年11月30日","excerpt":"<h2> 背景</h2>\\n<p>在分布式系统中，不同的节点进行数据/信息共享是一个基本的需求。</p>\\n<p>一种比较简单粗暴的方法就是 <strong>集中式发散消息</strong>，简单来说就是一个主节点同时共享最新信息给其他所有节点，比较适合中心化系统。这种方法的缺陷也很明显，节点多的时候不光同步消息的效率低，还太依赖与中心节点，存在单点风险问题。</p>\\n<p>于是，<strong>分散式发散消息</strong> 的 <strong>Gossip 协议</strong> 就诞生了。</p>\\n<h2> Gossip 协议介绍</h2>\\n<p>Gossip 直译过来就是闲话、流言蜚语的意思。流言蜚语有什么特点呢？容易被传播且传播速度还快，你传我我传他，然后大家都知道了。</p>","autoDesc":true}');export{e as data};
