const t=JSON.parse('{"key":"v-0c14fec1","path":"/code/java/common/basic/java-keyword-summary.html","title":"final,static,this,super 关键字总结","lang":"zh-CN","frontmatter":{"title":"final,static,this,super 关键字总结","date":"2020-08-18T00:00:00.000Z","category":"Java","tag":["Java基础"],"description":"final,static,this,super 关键字总结 final 关键字 final 关键字，意思是最终的、不可修改的，最见不得变化 ，用来修饰类、方法和变量，具有以下特点： final 修饰的类不能被继承，final 类中的所有成员方法都会被隐式的指定为 final 方法； final 修饰的方法不能被重写； final 修饰的变量是常量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能让其指向另一个对象。","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/begun-blog/code/java/common/basic/java-keyword-summary.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"final,static,this,super 关键字总结"}],["meta",{"property":"og:description","content":"final,static,this,super 关键字总结 final 关键字 final 关键字，意思是最终的、不可修改的，最见不得变化 ，用来修饰类、方法和变量，具有以下特点： final 修饰的类不能被继承，final 类中的所有成员方法都会被隐式的指定为 final 方法； final 修饰的方法不能被重写； final 修饰的变量是常量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能让其指向另一个对象。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2020-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"final,static,this,super 关键字总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"final 关键字","slug":"final-关键字","link":"#final-关键字","children":[]},{"level":2,"title":"static 关键字","slug":"static-关键字","link":"#static-关键字","children":[]},{"level":2,"title":"this 关键字","slug":"this-关键字","link":"#this-关键字","children":[]},{"level":2,"title":"super 关键字","slug":"super-关键字","link":"#super-关键字","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]},{"level":2,"title":"static 关键字主要有以下四种使用场景","slug":"static-关键字主要有以下四种使用场景","link":"#static-关键字主要有以下四种使用场景","children":[{"level":3,"title":"修饰成员变量和成员方法(常用)","slug":"修饰成员变量和成员方法-常用","link":"#修饰成员变量和成员方法-常用","children":[]},{"level":3,"title":"静态代码块","slug":"静态代码块","link":"#静态代码块","children":[]},{"level":3,"title":"静态内部类","slug":"静态内部类","link":"#静态内部类","children":[]},{"level":3,"title":"静态导包","slug":"静态导包","link":"#静态导包","children":[]}]},{"level":2,"title":"补充内容","slug":"补充内容","link":"#补充内容","children":[{"level":3,"title":"静态方法与非静态方法","slug":"静态方法与非静态方法","link":"#静态方法与非静态方法","children":[]},{"level":3,"title":"static{}静态代码块与{}非静态代码块(构造代码块)","slug":"static-静态代码块与-非静态代码块-构造代码块","link":"#static-静态代码块与-非静态代码块-构造代码块","children":[]},{"level":3,"title":"参考","slug":"参考-1","link":"#参考-1","children":[]}]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":11.37,"words":3412},"filePathRelative":"code/java/common/basic/java-keyword-summary.md","localizedDate":"2020年8月18日","excerpt":"<h1> final,static,this,super 关键字总结</h1>\\n<h2> final 关键字</h2>\\n<p><strong>final 关键字，意思是最终的、不可修改的，最见不得变化 ，用来修饰类、方法和变量，具有以下特点：</strong></p>\\n<ol>\\n<li>\\n<p>final 修饰的类不能被继承，final 类中的所有成员方法都会被隐式的指定为 final 方法；</p>\\n</li>\\n<li>\\n<p>final 修饰的方法不能被重写；</p>\\n</li>\\n<li>\\n<p>final 修饰的变量是常量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能让其指向另一个对象。</p>\\n</li>\\n</ol>","autoDesc":true}');export{t as data};
