const e=JSON.parse('{"key":"v-af52c4f2","path":"/code/java/common/basic/bigdecimal.html","title":"BigDecimal 详解","lang":"zh-CN","frontmatter":{"title":"BigDecimal 详解","date":"2020-08-18T00:00:00.000Z","category":"Java","tag":["Java基础"],"description":"《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 BigDecimal 来进行浮点数的运算”。 这篇文章，我就简单解释一下浮点数运算出现精度丢失的原因以及 BigDecimal 的常见用法，希望对大家有帮助！ BigDecimal 介绍 BigDecimal 可以实现对浮点数的运算，不会造成精度丢失。通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过 BigDecimal 来做的。","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/code/java/common/basic/bigdecimal.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"BigDecimal 详解"}],["meta",{"property":"og:description","content":"《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 BigDecimal 来进行浮点数的运算”。 这篇文章，我就简单解释一下浮点数运算出现精度丢失的原因以及 BigDecimal 的常见用法，希望对大家有帮助！ BigDecimal 介绍 BigDecimal 可以实现对浮点数的运算，不会造成精度丢失。通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过 BigDecimal 来做的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2020-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BigDecimal 详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"BigDecimal 介绍","slug":"bigdecimal-介绍","link":"#bigdecimal-介绍","children":[]},{"level":2,"title":"BigDecimal 的用处","slug":"bigdecimal-的用处","link":"#bigdecimal-的用处","children":[]},{"level":2,"title":"BigDecimal 常见方法","slug":"bigdecimal-常见方法","link":"#bigdecimal-常见方法","children":[{"level":3,"title":"加减乘除","slug":"加减乘除","link":"#加减乘除","children":[]},{"level":3,"title":"大小比较","slug":"大小比较","link":"#大小比较","children":[]},{"level":3,"title":"保留几位小数","slug":"保留几位小数","link":"#保留几位小数","children":[]}]},{"level":2,"title":"BigDecimal 的使用注意事项","slug":"bigdecimal-的使用注意事项","link":"#bigdecimal-的使用注意事项","children":[]},{"level":2,"title":"BigDecimal 工具类分享","slug":"bigdecimal-工具类分享","link":"#bigdecimal-工具类分享","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":6.97,"words":2091},"filePathRelative":"code/java/common/basic/bigdecimal.md","localizedDate":"2020年8月18日","excerpt":"<p>《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 <code>BigDecimal</code> 来进行浮点数的运算”。</p>\\n<p>这篇文章，我就简单解释一下浮点数运算出现精度丢失的原因以及 <code>BigDecimal</code> 的常见用法，希望对大家有帮助！</p>\\n<h2> BigDecimal 介绍</h2>\\n<p><code>BigDecimal</code> 可以实现对浮点数的运算，不会造成精度丢失。通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过 <code>BigDecimal</code> 来做的。</p>","autoDesc":true}');export{e as data};
