const e=JSON.parse('{"key":"v-9961aa9c","path":"/interview/RPC-FAQ.html","title":"RPC 部分","lang":"zh-CN","frontmatter":{"title":"RPC 部分","date":"2020-11-23T00:00:00.000Z","category":"interview","description":"什么是 RPC ？ RPC (Remote Procedure Call)即远程过程调用，是分布式系统常见的一种通信方法。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。 除 RPC 之外，常见的多系统数据交互方案还有分布式消息队列、HTTP 请求调用、数据库和分布式缓存等。 其中 RPC 和 HTTP 调用是没有经过中间件的，它们是端到端系统的直接数据交互。 简单的说","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/interview/RPC-FAQ.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"RPC 部分"}],["meta",{"property":"og:description","content":"什么是 RPC ？ RPC (Remote Procedure Call)即远程过程调用，是分布式系统常见的一种通信方法。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。 除 RPC 之外，常见的多系统数据交互方案还有分布式消息队列、HTTP 请求调用、数据库和分布式缓存等。 其中 RPC 和 HTTP 调用是没有经过中间件的，它们是端到端系统的直接数据交互。 简单的说"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:published_time","content":"2020-11-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RPC 部分\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-11-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"什么是 RPC ？","slug":"什么是-rpc","link":"#什么是-rpc","children":[]},{"level":3,"title":"为什么我们要用RPC?","slug":"为什么我们要用rpc","link":"#为什么我们要用rpc","children":[]},{"level":3,"title":"RPC需要解决的三个问题","slug":"rpc需要解决的三个问题","link":"#rpc需要解决的三个问题","children":[]},{"level":3,"title":"实现高可用RPC框架需要考虑到的问题","slug":"实现高可用rpc框架需要考虑到的问题","link":"#实现高可用rpc框架需要考虑到的问题","children":[]},{"level":3,"title":"一次完整的 RPC 流程","slug":"一次完整的-rpc-流程","link":"#一次完整的-rpc-流程","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":7.93,"words":2380},"filePathRelative":"interview/RPC-FAQ.md","localizedDate":"2020年11月23日","excerpt":"<h3> 什么是 RPC ？</h3>\\n<ul>\\n<li>RPC (Remote Procedure Call)即<strong>远程过程调用</strong>，是分布式系统常见的一种通信方法。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。</li>\\n<li>除 RPC 之外，常见的多系统数据交互方案还有分布式消息队列、HTTP 请求调用、数据库和分布式缓存等。</li>\\n<li>其中 RPC 和 HTTP 调用是没有经过中间件的，它们是端到端系统的直接数据交互。</li>\\n</ul>\\n<p><strong>简单的说</strong></p>","autoDesc":true}');export{e as data};
