const e=JSON.parse('{"key":"v-42b517f6","path":"/code/java/common/collection/concurrent-hash-map-source-code.html","title":"ConcurrentHashMap源码&底层数据结构分析","lang":"zh-CN","frontmatter":{"title":"ConcurrentHashMap源码&底层数据结构分析","date":"2020-08-18T00:00:00.000Z","category":"Java","tag":["Java集合"],"description":"本文来自公众号：末读代码的投稿，原文地址：https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw 。 上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 ConcurrentHashMap 了，作为线程安全的HashMap ，它的使用频率也是很高。那么它的存储结构和实现原理是怎么样的呢？ 1. ConcurrentHashMap 1.7 1. 存储结构","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/begun-blog/code/java/common/collection/concurrent-hash-map-source-code.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"ConcurrentHashMap源码&底层数据结构分析"}],["meta",{"property":"og:description","content":"本文来自公众号：末读代码的投稿，原文地址：https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw 。 上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 ConcurrentHashMap 了，作为线程安全的HashMap ，它的使用频率也是很高。那么它的存储结构和实现原理是怎么样的呢？ 1. ConcurrentHashMap 1.7 1. 存储结构"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://began-zhao.github.io/begun-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"ConcurrentHashMap源码&底层数据结构分析"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:tag","content":"Java集合"}],["meta",{"property":"article:published_time","content":"2020-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ConcurrentHashMap源码&底层数据结构分析\\",\\"image\\":[\\"https://began-zhao.github.io/begun-blog/\\"],\\"datePublished\\":\\"2020-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"1. ConcurrentHashMap 1.7","slug":"_1-concurrenthashmap-1-7","link":"#_1-concurrenthashmap-1-7","children":[{"level":3,"title":"1. 存储结构","slug":"_1-存储结构","link":"#_1-存储结构","children":[]},{"level":3,"title":"2. 初始化","slug":"_2-初始化","link":"#_2-初始化","children":[]},{"level":3,"title":"3. put","slug":"_3-put","link":"#_3-put","children":[]},{"level":3,"title":"4. 扩容 rehash","slug":"_4-扩容-rehash","link":"#_4-扩容-rehash","children":[]},{"level":3,"title":"5. get","slug":"_5-get","link":"#_5-get","children":[]}]},{"level":2,"title":"2. ConcurrentHashMap 1.8","slug":"_2-concurrenthashmap-1-8","link":"#_2-concurrenthashmap-1-8","children":[{"level":3,"title":"1. 存储结构","slug":"_1-存储结构-1","link":"#_1-存储结构-1","children":[]},{"level":3,"title":"2. 初始化 initTable","slug":"_2-初始化-inittable","link":"#_2-初始化-inittable","children":[]},{"level":3,"title":"3. put","slug":"_3-put-1","link":"#_3-put-1","children":[]},{"level":3,"title":"4. get","slug":"_4-get","link":"#_4-get","children":[]}]},{"level":2,"title":"3.  总结","slug":"_3-总结","link":"#_3-总结","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":14.26,"words":4278},"filePathRelative":"code/java/common/collection/concurrent-hash-map-source-code.md","localizedDate":"2020年8月18日","excerpt":"<blockquote>\\n<p>本文来自公众号：末读代码的投稿，原文地址：https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw  。</p>\\n</blockquote>\\n<p>上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 <code>ConcurrentHashMap </code> 了，作为线程安全的HashMap ，它的使用频率也是很高。那么它的存储结构和实现原理是怎么样的呢？</p>\\n<h2> 1. ConcurrentHashMap 1.7</h2>\\n<h3> 1. 存储结构</h3>\\n","autoDesc":true}');export{e as data};
