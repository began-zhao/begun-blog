const e=JSON.parse('{"key":"v-6e6d3b98","path":"/code/java/common/concurrent/java-concurrent-questions-02.html","title":"Java 并发常见知识点&面试题总结（进阶篇）","lang":"zh-CN","frontmatter":{"title":"Java 并发常见知识点&面试题总结（进阶篇）","date":"2020-08-19T00:00:00.000Z","category":"Java","tag":["Java并发"],"description":"synchronized 关键字 说一说自己对于 synchronized 关键字的了解 synchronized 关键字解决的是多个线程之间访问资源的同步性，synchronized关键字可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行。 另外，在 Java 早期版本中，synchronized 属于 重量级锁，效率低下。 为什么呢？","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/code/java/common/concurrent/java-concurrent-questions-02.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"Java 并发常见知识点&面试题总结（进阶篇）"}],["meta",{"property":"og:description","content":"synchronized 关键字 说一说自己对于 synchronized 关键字的了解 synchronized 关键字解决的是多个线程之间访问资源的同步性，synchronized关键字可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行。 另外，在 Java 早期版本中，synchronized 属于 重量级锁，效率低下。 为什么呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:tag","content":"Java并发"}],["meta",{"property":"article:published_time","content":"2020-08-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发常见知识点&面试题总结（进阶篇）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"synchronized 关键字","slug":"synchronized-关键字","link":"#synchronized-关键字","children":[{"level":3,"title":"说一说自己对于 synchronized 关键字的了解","slug":"说一说自己对于-synchronized-关键字的了解","link":"#说一说自己对于-synchronized-关键字的了解","children":[]},{"level":3,"title":"说说自己是怎么使用 synchronized 关键字","slug":"说说自己是怎么使用-synchronized-关键字","link":"#说说自己是怎么使用-synchronized-关键字","children":[]},{"level":3,"title":"构造方法可以使用 synchronized 关键字修饰么？","slug":"构造方法可以使用-synchronized-关键字修饰么","link":"#构造方法可以使用-synchronized-关键字修饰么","children":[]},{"level":3,"title":"讲一下 synchronized 关键字的底层原理","slug":"讲一下-synchronized-关键字的底层原理","link":"#讲一下-synchronized-关键字的底层原理","children":[]},{"level":3,"title":"说说 JDK1.6 之后的 synchronized 关键字底层做了哪些优化，可以详细介绍一下这些优化吗","slug":"说说-jdk1-6-之后的-synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗","link":"#说说-jdk1-6-之后的-synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗","children":[]},{"level":3,"title":"谈谈 synchronized 和 ReentrantLock 的区别","slug":"谈谈-synchronized-和-reentrantlock-的区别","link":"#谈谈-synchronized-和-reentrantlock-的区别","children":[]}]},{"level":2,"title":"volatile 关键字","slug":"volatile-关键字","link":"#volatile-关键字","children":[{"level":3,"title":"CPU 缓存模型","slug":"cpu-缓存模型","link":"#cpu-缓存模型","children":[]},{"level":3,"title":"讲一下 JMM(Java 内存模型)","slug":"讲一下-jmm-java-内存模型","link":"#讲一下-jmm-java-内存模型","children":[]},{"level":3,"title":"并发编程的三个重要特性","slug":"并发编程的三个重要特性","link":"#并发编程的三个重要特性","children":[]},{"level":3,"title":"说说 synchronized 关键字和 volatile 关键字的区别","slug":"说说-synchronized-关键字和-volatile-关键字的区别","link":"#说说-synchronized-关键字和-volatile-关键字的区别","children":[]}]},{"level":2,"title":"ThreadLocal","slug":"threadlocal","link":"#threadlocal","children":[{"level":3,"title":"ThreadLocal 简介","slug":"threadlocal-简介","link":"#threadlocal-简介","children":[]},{"level":3,"title":"ThreadLocal 示例","slug":"threadlocal-示例","link":"#threadlocal-示例","children":[]},{"level":3,"title":"ThreadLocal 原理","slug":"threadlocal-原理","link":"#threadlocal-原理","children":[]},{"level":3,"title":"ThreadLocal 内存泄露问题","slug":"threadlocal-内存泄露问题","link":"#threadlocal-内存泄露问题","children":[]}]},{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"为什么要用线程池？","slug":"为什么要用线程池","link":"#为什么要用线程池","children":[]},{"level":3,"title":"实现 Runnable 接口和 Callable 接口的区别","slug":"实现-runnable-接口和-callable-接口的区别","link":"#实现-runnable-接口和-callable-接口的区别","children":[]},{"level":3,"title":"执行 execute()方法和 submit()方法的区别是什么呢？","slug":"执行-execute-方法和-submit-方法的区别是什么呢","link":"#执行-execute-方法和-submit-方法的区别是什么呢","children":[]},{"level":3,"title":"如何创建线程池","slug":"如何创建线程池","link":"#如何创建线程池","children":[]},{"level":3,"title":"ThreadPoolExecutor 类分析","slug":"threadpoolexecutor-类分析","link":"#threadpoolexecutor-类分析","children":[]},{"level":3,"title":"一个简单的线程池 Demo","slug":"一个简单的线程池-demo","link":"#一个简单的线程池-demo","children":[]},{"level":3,"title":"线程池原理分析","slug":"线程池原理分析","link":"#线程池原理分析","children":[]}]},{"level":2,"title":"Atomic 原子类","slug":"atomic-原子类","link":"#atomic-原子类","children":[{"level":3,"title":"介绍一下 Atomic 原子类","slug":"介绍一下-atomic-原子类","link":"#介绍一下-atomic-原子类","children":[]},{"level":3,"title":"JUC 包中的原子类是哪 4 类?","slug":"juc-包中的原子类是哪-4-类","link":"#juc-包中的原子类是哪-4-类","children":[]},{"level":3,"title":"讲讲 AtomicInteger 的使用","slug":"讲讲-atomicinteger-的使用","link":"#讲讲-atomicinteger-的使用","children":[]},{"level":3,"title":"能不能给我简单介绍一下 AtomicInteger 类的原理","slug":"能不能给我简单介绍一下-atomicinteger-类的原理","link":"#能不能给我简单介绍一下-atomicinteger-类的原理","children":[]}]},{"level":2,"title":"AQS","slug":"aqs","link":"#aqs","children":[{"level":3,"title":"AQS 介绍","slug":"aqs-介绍","link":"#aqs-介绍","children":[]},{"level":3,"title":"AQS 原理分析","slug":"aqs-原理分析","link":"#aqs-原理分析","children":[]},{"level":3,"title":"AQS 组件总结","slug":"aqs-组件总结","link":"#aqs-组件总结","children":[]},{"level":3,"title":"用过 CountDownLatch 么？什么场景下用的？","slug":"用过-countdownlatch-么-什么场景下用的","link":"#用过-countdownlatch-么-什么场景下用的","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":43.93,"words":13180},"filePathRelative":"code/java/common/concurrent/java-concurrent-questions-02.md","localizedDate":"2020年8月19日","excerpt":"<h2> synchronized 关键字</h2>\\n<h3> 说一说自己对于 synchronized 关键字的了解</h3>\\n<p><strong><code>synchronized</code> 关键字解决的是多个线程之间访问资源的同步性，<code>synchronized</code>关键字可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行。</strong></p>\\n<p>另外，在 Java 早期版本中，<code>synchronized</code> 属于 <strong>重量级锁</strong>，效率低下。</p>\\n<p><strong>为什么呢？</strong></p>","autoDesc":true}');export{e as data};
