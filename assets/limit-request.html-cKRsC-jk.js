const e=JSON.parse('{"key":"v-e9a7b22e","path":"/code/java/high-availability/limit-request.html","title":"限流","lang":"zh-CN","frontmatter":{"title":"限流","category":"高可用","date":"2021-03-20T00:00:00.000Z","description":"何为限流？为什么要限流？ 针对软件系统来说，限流就是对请求的速率进行限制，避免瞬时的大量请求击垮软件系统。毕竟，软件系统的处理能力是有限的。如果说超过了其处理能力的范围，软件系统可能直接就挂掉了。 限流可能会导致用户的请求无法被正确处理，不过，这往往也是权衡了软件系统的稳定性之后得到的最优解。 现实生活中，处处都有限流的实际应用，就比如排队买票是为了避免大量用户涌入购票而导致售票员无法处理。 排队示意图","head":[["meta",{"property":"og:url","content":"https://began-zhao.github.io/code/java/high-availability/limit-request.html"}],["meta",{"property":"og:site_name","content":"咖飞的博客"}],["meta",{"property":"og:title","content":"限流"}],["meta",{"property":"og:description","content":"何为限流？为什么要限流？ 针对软件系统来说，限流就是对请求的速率进行限制，避免瞬时的大量请求击垮软件系统。毕竟，软件系统的处理能力是有限的。如果说超过了其处理能力的范围，软件系统可能直接就挂掉了。 限流可能会导致用户的请求无法被正确处理，不过，这往往也是权衡了软件系统的稳定性之后得到的最优解。 现实生活中，处处都有限流的实际应用，就比如排队买票是为了避免大量用户涌入购票而导致售票员无法处理。 排队示意图"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-19T03:27:59.000Z"}],["meta",{"property":"article:author","content":"咖飞"}],["meta",{"property":"article:published_time","content":"2021-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-19T03:27:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"限流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-19T03:27:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咖飞\\",\\"url\\":\\"https://began-zhao.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"何为限流？为什么要限流？","slug":"何为限流-为什么要限流","link":"#何为限流-为什么要限流","children":[]},{"level":2,"title":"常见限流算法","slug":"常见限流算法","link":"#常见限流算法","children":[{"level":3,"title":"固定窗口计数器算法","slug":"固定窗口计数器算法","link":"#固定窗口计数器算法","children":[]},{"level":3,"title":"滑动窗口计数器算法","slug":"滑动窗口计数器算法","link":"#滑动窗口计数器算法","children":[]},{"level":3,"title":"漏桶算法","slug":"漏桶算法","link":"#漏桶算法","children":[]},{"level":3,"title":"令牌桶算法","slug":"令牌桶算法","link":"#令牌桶算法","children":[]}]},{"level":2,"title":"单机限流","slug":"单机限流","link":"#单机限流","children":[]},{"level":2,"title":"分布式限流","slug":"分布式限流","link":"#分布式限流","children":[]},{"level":2,"title":"相关阅读","slug":"相关阅读","link":"#相关阅读","children":[]}],"git":{"createdTime":1702956479000,"updatedTime":1702956479000,"contributors":[{"name":"z-begun","email":"z-begun@outlook.com","commits":1}]},"readingTime":{"minutes":7.38,"words":2215},"filePathRelative":"code/java/high-availability/limit-request.md","localizedDate":"2021年3月20日","excerpt":"<h2> 何为限流？为什么要限流？</h2>\\n<p>针对软件系统来说，限流就是对请求的速率进行限制，避免瞬时的大量请求击垮软件系统。毕竟，软件系统的处理能力是有限的。如果说超过了其处理能力的范围，软件系统可能直接就挂掉了。</p>\\n<p>限流可能会导致用户的请求无法被正确处理，不过，这往往也是权衡了软件系统的稳定性之后得到的最优解。</p>\\n<p>现实生活中，处处都有限流的实际应用，就比如排队买票是为了避免大量用户涌入购票而导致售票员无法处理。</p>\\n<figure><img src=\\"https://img-blog.csdnimg.cn/f9f17071fc4d489d85d2a234fb298df1.png\\" alt=\\"排队示意图\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>排队示意图</figcaption></figure>","autoDesc":true}');export{e as data};
